const APP={version:"4.1.7",mode:"/delta-dual"===window.location.pathname?2:1,resize:0,machineId:getMachineId(),skinAuth:"Vanis s5fKDiOD5hSR-DVZGs5u",reserved:{value:!1,color:"#ffffff"},selected:!1,blacklist:[".","1","2","3","4","5","6","7","8","9","0","k","K","m","M","A1","A2","A3","A4","A5","B1","B2","B3","B4","B5","C1","C2","C3","C4","C5","D1","D2","D3","D4","D5","E1","E2","E3","E4","E5","Unnamed",""," ","  ","   ","    ","     ","      ","       ","        ","         ","          ","           ","            ","             ","              ","               ","                "]},ATTRS={libraries:getAllLibrary(),selectors:getAllSelectors(),images:getAllImages(),colors:getAllColors(),errors:getAllErrors(),titles:getAllTitle()},DB={database:void 0,references:{}},USER={credentials:{},statistics:{},configurations:getAllConfigurations()},LISTS={users:{},colors:{},badges:void 0,configurations:void 0,leaderboard:void 0},SKINS={all:[],me:[],fav:[]};function onDocumentReady(){pageConfiguration(),onAttributesReady().then()}async function onAttributesReady(){try{await loadScript(ATTRS.libraries.firebaseApp),await Promise.all([loadScript(ATTRS.libraries.jquery),loadScript(ATTRS.libraries.firebaseAuth),loadScript(ATTRS.libraries.firebaseDatabase),loadScript(ATTRS.libraries.sortable)]),await onScriptsReady()}catch(e){const t=parseInt(localStorage.getItem("promiseError")||0)||0;t<2?(localStorage.setItem("promiseError",(t+1).toString()),window.location.reload()):displayError(ATTRS.errors.title+"Promise issue, 3 attempts failed."+ATTRS.errors.content)}}async function onScriptsReady(){firebaseConfiguration((()=>{firebaseAccount((()=>{firebaseComponents((()=>{removeAds(),createComponents(),listenerComponents(),drawStyle()}))}))}))}function firebaseConfiguration(e){const t={apiKey:"AIzaSyCc_St6TMlGM6fmeYre_gHjCXYriPc3wtM",authDomain:"delta-client.firebaseapp.com",projectId:"delta-client",storageBucket:"delta-client.appspot.com",messagingSenderId:"68762024822",appId:"1:68762024822:web:c4f0497b6b914ac9ce9857",measurementId:"G-G5YSMYFCXJ",databaseURL:"https://delta-client-default-rtdb.europe-west1.firebasedatabase.app"};"undefined"!=typeof firebase?(firebase.initializeApp(t),e()):displayError(ATTRS.errors.title+"Database connection failed"+ATTRS.errors.content)}function firebaseSignOut(){firebase.auth().currentUser&&firebase.auth().signOut().then((()=>{window.location.reload()})).catch((()=>{displayError(ERROR.title+"Signout failed"+ERROR.content)}))}function firebaseAccount(e){firebase.auth().onAuthStateChanged((function(t){t?(getLocalValues(t),getDatabase(),e()):initRegisterForm((()=>{}))}))}function firebaseComponents(e){firebase.apps.length>0&&(fetchUserData(),e())}function initRegisterForm(){initRegisterPage(),initAnimationsPage(),initAnimationsForm(),initForm(),setTimeout((()=>{removeCookie()}),1e3)}function initRegisterPage(){document.head.innerHTML+="\n        <style>\n            #login-form>input::placeholder {\n                color:#956dff6e;\n            }\n        </style>\n    ",document.body.innerHTML+='\n        <div class="signIn" style="background: linear-gradient(45deg,#010004,#130535);position: fixed;top: 0;left: 0;width: 100%;height: 100%;z-index: 9999;display: flex;justify-content: center;align-items: center;flex-direction: column;">\n            <h2 id="delta-text" style="position: absolute;top: 90px;font-size: 45px;background: linear-gradient(45deg, #5718c2, #8036ff, #aa78ff, #cbadff, #aa78ff, #8036ff, #5718c2);background-size: 200% auto;animation: slide 2s infinite;-webkit-background-clip: text;background-clip: text;color: transparent;">Delta account</h2>\n           <h4 id="delta-text" style="position: absolute;top: 180px;color: #b79cff;font-size: 25px;opacity: 0.8;text-align: center">Password login is required for security<br>Your data is safe and secured <i class="fas fa-lock"></i><br>Your password must be at least 7 characters long <i class="fas fa-key"></i></h4>\n           <form id="login-form" style="position: absolute; display: flex; flex-direction: column; gap: 10px; justify-content: center; align-items: center; margin-top: 270px">\n              <input type="email" id="email-input" placeholder="Email" style="background: #54379f4d;border:solid 1px #956dff6e;color: #ffffff;border-radius: 13px;padding: 8px;width: 350px;height: 35px;font-size: 18px;text-align: center;">\n              <input type="password" id="password-input" placeholder="Password" style="background: #54379f4d;border:solid 1px #956dff6e;color: #dadada;border-radius: 13px;padding: 8px;width: 350px;height: 35px;font-size: 18px;text-align: center;">\n              <div id="submit-account" style="background: #b69cff;color: #241931;border-radius: 13px;padding: 8px;width: 350px;height: 35px;transform: scale(1);transition: all 0.3s ease 0s;">\n                 <p id="submit-text" style="font-size: 18px; text-align: center; padding: 6px;">Login/create (automatic)</p>\n              </div>\n           </form>\n        </div>\n    '}function initAnimationsForm(){const e=$(ATTRS.selectors.submitButton),t={transform:"scale(0.9)",transition:"all 0.3s"},n={transform:"scale(1)",transition:"all 0.3s"},a=()=>{$(ATTRS.selectors.submitText).text("Login/create (automatic)"),e.css("background-color","#b69cff")};e.hover((()=>e.css(t)),(()=>e.css(n))),$(ATTRS.selectors.emailInput).on("input",a),$(ATTRS.selectors.passwordInput).on("input",a)}function initForm(){const e=$(ATTRS.selectors.submitButton),t=$(ATTRS.selectors.submitText),n=$(ATTRS.selectors.emailInput),a=$(ATTRS.selectors.passwordInput),s=n=>{t.text(n),e.css("background-color","#ee3652")},o=()=>{USER.credentials=firebase.auth().currentUser,window.location.reload()},i=e=>{"auth/email-already-in-use"===e.code?firebase.auth().signInWithEmailAndPassword(n.val(),a.val()).then(o).catch((()=>s("Incorrect password..."))):s("An error as occurred...")};e.on("click",(function(){a.val().length>6?(t.text("Loading..."),e.css("background-color","#584879"),firebase.auth().createUserWithEmailAndPassword(n.val(),a.val()).then(o).catch(i)):s("Password too short...")}))}function initAnimationsPage(){const e=document.createElement("style");e.textContent="\n        @keyframes slide { 0% { background-position: 200% 0; } 100% { background-position: -200% 0; } }\n    ",document.head.appendChild(e)}function pushUserInfos(){let e={uid:USER.credentials.uid,nickname:USER.configurations.nickname,skin:$(ATTRS.selectors.skinUrl).val(),color:APP.reserved.value?APP.reserved.color:USER.configurations.nicknameColor,server:USER.server,status:(new Date).getTime(),mode:USER.mode,level:0,anonymous:USER.configurations.anonymous};$(ATTRS.selectors.discordBtn)&&(e.level=$(ATTRS.selectors.level).text().trim().match(/\d+/)[0]||0),pushDatabase(DB.references.meUser,e)}function pushUserOnline(){pushDatabase(DB.references.meUser,{uid:USER.credentials.uid,nickname:USER.configurations.nickname,skin:$(ATTRS.selectors.skinUrl).val(),color:APP.reserved.value?APP.reserved.color:USER.configurations.nicknameColor,server:USER.server,status:(new Date).getTime()})}function pushUserColors(){APP.reserved.value||pushDatabase(DB.references.meColor,{uid:USER.credentials.uid,nickname:USER.configurations.nickname,color:USER.configurations.nicknameColor})}function pushUserConfigurations(){"checked"===USER.configurations.autoSynchronization&&pushDatabase(DB.references.meConfigItem,{skins:USER.configurations.skins,hotkeys:USER.configurations.hotkeys,blurredHUD:USER.configurations.blurredHUD,resizableChatbox:USER.configurations.resizableChatbox,colorNicknameCell:USER.configurations.colorNicknameCell,colorNicknameChatbox:USER.configurations.colorNicknameChatbox,colorNicknameLeaderboard:USER.configurations.colorNicknameLeaderboard,nicknameColor:USER.configurations.nicknameColor,nickname:USER.configurations.nickname,teamtag:$(ATTRS.selectors.teamTag).val(),machineId:USER.configurations.machineId,date:USER.configurations.date})}function pushUserStatisticsDb(){pushDatabase(DB.references.meStat,USER.statistics),localStorage.setItem("sT","0"),localStorage.setItem("sM","0"),localStorage.setItem("sK","0"),localStorage.setItem("sG","1")}function pushUserStatisticsLocally(){const e=parseInt(getLocalStorageItem("sT","0"))+($(ATTRS.selectors.statTime).length?getConvertedTimeToSeconds($(ATTRS.selectors.statTime).text().split(": ")[1]):0),t=parseInt(getLocalStorageItem("sM","0"))+($(ATTRS.selectors.statScore).length?getConvertedStringToNumber($(ATTRS.selectors.statScore).text().split(": ")[1]):0),n=parseInt(getLocalStorageItem("sK","0"))+($(ATTRS.selectors.statKills).length?parseInt($(ATTRS.selectors.statKills).text().split(": ")[1],10):0),a=parseInt(getLocalStorageItem("sG","1"))+1;USER.statistics.timeTotal+=e,USER.statistics.massTotal+=t,USER.statistics.killTotal+=n,USER.statistics.gameTotal+=1,USER.statistics.timeAvg=USER.statistics.timeTotal/USER.statistics.gameTotal,USER.statistics.massAvg=USER.statistics.massTotal/USER.statistics.gameTotal,USER.statistics.kda=USER.statistics.killTotal/USER.statistics.gameTotal,localStorage.setItem("sT",e.toString()),localStorage.setItem("sM",t.toString()),localStorage.setItem("sK",n.toString()),localStorage.setItem("sG",a.toString())}function pushUserBadge(e){const t=JSONSafeParser(decodeURIComponent(e));Object.keys(t).length>0&&(t.owners&&delete t.owners,t.earn&&delete t.earn,APP.selected===t.id&&(t.url=null),Object.values(LISTS.badges).forEach((e=>{$(`.badge${e.id}`).css("opacity",.3)})),$(`.badge${t.id}`).css("opacity",APP.selected===t.id?.3:1),pushDatabase(DB.references.meColorBadge,t),pushDatabase(DB.references.meUserBadge,t),APP.selected===t.id?APP.selected=!1:APP.selected=t.id)}function fetchUserStatisticsDb(){DB.references.meStat.once("value",(e=>{if(e.exists()){const t=e.val();USER.statistics={timeTotal:(t.timeTotal||0)+parseInt(getLocalStorageItem("sT","0")),massTotal:(t.massTotal||0)+parseInt(getLocalStorageItem("sM","0")),killTotal:(t.killTotal||0)+parseInt(getLocalStorageItem("sK","0")),gameTotal:(t.gameTotal||0)+parseInt(getLocalStorageItem("sG","1")),uid:USER.credentials.uid}}else USER.statistics={timeTotal:0,massTotal:0,killTotal:0,gameTotal:1,uid:USER.credentials.uid};USER.statistics.kda=USER.statistics.killTotal/USER.statistics.gameTotal,USER.statistics.massAvg=USER.statistics.massTotal/USER.statistics.gameTotal,USER.statistics.timeAvg=USER.statistics.timeTotal/USER.statistics.gameTotal,pushUserStatisticsDb()}))}function fetchUsersOnce(){DB.references.user.once("value",(e=>{e.exists()&&(LISTS.users=e.val(),fetchBanned(),fetchUserChanged())}))}function fetchUserChanged(){DB.references.user.on("child_changed",(e=>{if(e.exists()){const t=e.val();t.uid&&(LISTS.users[t.uid]=t)}}))}function fetchColorsOnce(e){DB.references.color.once("value",(t=>{if(t.exists()){const n=t.val();Object.keys(n).forEach((e=>{const t=n[e];t.nickname&&t.color&&(LISTS.colors[t.nickname.trim()]={color:t.color,badge:t.badge&&t.badge.url?t.badge.url:null,uid:t.uid})})),localStorage.setItem("userColors",JSON.stringify(LISTS.colors)),1===APP.mode&&"checked"===USER.configurations.colorNicknameCell&&changeCellColor(),"checked"!==USER.configurations.colorNicknameLeaderboard&&"checked"!==USER.configurations.colorNicknameChatbox&&"checked"!==USER.configurations.colorNicknameCell||fetchColorChanged(),e()}}))}function fetchColorChanged(){DB.references.color.on("child_changed",(e=>{if(e.exists()){const t=e.val();t.nickname&&t.color&&(LISTS.colors[t.nickname.trim()]={color:t.color,badge:t.badge&&t.badge.url?t.badge.url:null,uid:t.uid}),localStorage.setItem("userColors",JSON.stringify(LISTS.colors)),1===APP.mode&&"checked"===USER.configurations.colorNicknameCell&&changeCellColor(t.nickname)}}))}function fetchBanned(){const e=LISTS.users[USER.credentials.uid],t=e?e.banned:void 0;t&&displayError(`You've been banned from Delta by Fohz. Reason: ${t}`)}function fetchItem(e,t){return e?Object.entries(e).map((([e,n])=>t(n,e))).join(""):""}function pageConfiguration(){let e=document.querySelector(ATTRS.selectors.link)||document.createElement("link");e.type="image/x-icon",e.rel="shortcut icon",e.href=ATTRS.images.deltaLogo,document.getElementsByTagName(ATTRS.selectors.head)[0].appendChild(e),document.title=1===APP.mode?"Delta - Single":"Delta - Dual"}function loadScript(e){return new Promise(((t,n)=>{const a=document.createElement("script");a.src=e,a.onload=t,a.onerror=n,document.head.appendChild(a)}))}function removeAds(){$(ATTRS.selectors.ad).css("display","none")}function removeCookie(){setTimeout((function(){$(ATTRS.selectors.cmp)&&($(ATTRS.selectors.cmpButton).click(),$(ATTRS.selectors.cmp).remove())}),1e3)}function onActionPressed(){pushUserOnline(),"checked"===USER.configurations.resizableChatbox&&0===APP.resize&&(APP.resize=1,createChatboxResizable())}function onColorChanged(e){const t=$(e).val();t&&/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(t)?changeUserColor(t):sendTimedSwal("Error","Bad color selected, you must select a real color",3e3,"OK")}function listenerComponents(){if(1===APP.mode&&($(ATTRS.selectors.skinUrl).on("change",(function(){skinValidation($(this).val())})),$(ATTRS.selectors.skinElem).on("click",(function(){skinValidation($(this).attr("src"))}))),2===APP.mode){const e=document.querySelector(ATTRS.selectors.bar),t={characterData:!0,childList:!0,subtree:!0};new MutationObserver((function(e){for(let t of e)if("childList"===t.type||"characterData"===t.type){onActionPressed();break}})).observe(e,t)}$(ATTRS.selectors.nickname).on("input",(function(){1===APP.mode&&$(ATTRS.selectors.nicknameProfile).text($(this).val()),USER.configurations.nickname=$(this).val()})).on("change",(function(){getReservedName(),pushUserColors(),pushUserOnline()})),$(ATTRS.selectors.serverListItem).on("click",(function(){USER.server=$(this).find(ATTRS.selectors.serverName).text(),APP.resize=0,pushUserOnline()})),$(ATTRS.selectors.playButton).on("click",(()=>{" Lobbies"!==USER.server&&pushUserStatisticsLocally(),onActionPressed()})),$(ATTRS.selectors.spectateButton).on("click",onActionPressed)}function createComponents(){1===APP.mode&&(createSkinProfile(),createHUD()),createBoxes(),createSortable(),1===APP.mode&&"checked"===USER.configurations.colorNicknameChatbox&&createColorObserver(ATTRS.selectors.messageList,ATTRS.selectors.messageName),1===APP.mode&&"checked"===USER.configurations.colorNicknameLeaderboard&&createColorObserver(ATTRS.selectors.leaderboard,ATTRS.selectors.leaderboardText)}function createHUD(){displayTitle(),displaySocial();const e=$(ATTRS.selectors.level).text().trim();e&&0===$(ATTRS.selectors.discordBtn).length&&e.match(/\d+/)[0]>=5&&displaySwitch()}function displayTitle(){const e=ATTRS.titles[Math.floor(Math.random()*ATTRS.titles.length)];$(ATTRS.selectors.barHud).append(`\n        <titleMod>(Single mode)</titleMod>\n        <titleExtension>${e}</titleExtension>\n    `)}function displaySocial(){const e=$(ATTRS.selectors.socialContainer);if(!e)return;e.append('\n        <a data-v-3f8f826c href="https://discord.gg/wthDcUb6nY" target="_blank" rel="noopener" class="discord-link">\n            <i class="fas fa-heart"></i> Delta Discord\n        </a>\n    ','\n        <a data-v-3f8f826c href="https://discord.gg/cJByExsnub" target="_blank" rel="noopener" class="bug-link">\n            <i class="fas fa-bug"></i> Report a bug\n        </a>\n    '),e.mouseover((function(){e.fadeTo(250,1)})),e.mouseleave((function(){e.stop(!0,!0).fadeTo(250,.1)}))}function displaySwitch(){$(ATTRS.selectors.mainContainer).append(`\n        <div class="switchDual switchButton" tip='Delta Dual uses Rise, the original system created by Zimek.' onclick="window.location.href = '${ATTRS.libraries.deltaDual}'">\n            <p>Switch to dual</p>\n            <i style="margin-top: 4px" class="fas fa-exchange-alt"></i>\n        </div>\n    `)}function createSkinProfile(){const e=$(ATTRS.selectors.skinUrl),t=e?e.val():void 0;t&&($(ATTRS.selectors.playerData).before(`\n        <div class="profile-image">\n            <img class="skinProfile beautifulSkin" alt="" src="${t}">\n            <span class="nicknameProfile" style="color: ${USER.configurations.nicknameColor}">${USER.configurations.nickname}</span>\n        </div>\n    `),skinValidation(t))}function skinValidation(e){e!==ATTRS.images.imageAddVanis?skinChecker(e):$(ATTRS.selectors.skinProfile).attr("src",ATTRS.images.vanisSkin)}function skinChecker(e){const t=new Image;t.onload=function(){$(ATTRS.selectors.skinProfile).attr("src",e),pushUserOnline()},t.onerror=function(){$(ATTRS.selectors.skinProfile).attr("src",ATTRS.images.transparentSkin),pushUserOnline()},t.src=e}function getReservedName(){const e=LISTS.colors[USER.configurations.nickname.trim()];e&&e.uid!==USER.credentials.uid?(sendTimedSwal("Reserved nickname","Your actual nickname is reserved by another Delta player, if you want to play with your color, change your nickname",1e4,"OK"),$(ATTRS.selectors.nicknameProfile).css({color:e.color,"font-style":"italic"}),$(ATTRS.selectors.nickname).css("font-style","italic"),APP.reserved={value:!0,color:e.color}):($(ATTRS.selectors.nicknameProfile).css({color:USER.configurations.nicknameColor,"font-style":"normal"}),$(ATTRS.selectors.nickname).css("font-style","normal"),APP.reserved={value:!1,color:USER.configurations.nicknameColor})}function showPage(e,t,n,a){"function"==typeof a&&a(),t&&t.forEach(((t,n)=>{n===e?($(t).removeClass("buttonTabActive"),$(t).addClass("buttonTabDisabled")):($(t).removeClass("buttonTabDisabled"),$(t).addClass("buttonTabActive"))})),n&&n.forEach(((t,n)=>{n===e?$(t).removeClass("hidden"):$(t).addClass("hidden")}))}function createBoxes(){createNewIcon(!0,"fas fa-users","userIcon",drawUsersModal),createNewIcon(!0,"fas fa-user","statIcon",drawStatisticsModal),createNewIcon(!0,"fas fa-trophy","leaderboardIcon",drawLeaderboardModal),createNewIcon(!0,"fas fa-wrench","toolIcon",drawToolsModal),createNewIcon(!0,"fas fa-images","skinsIcon",drawSkinsModal)}function createNewIcon(e,t,n,a){let s=$("<i>").addClass(t).attr("id",n).on("click",a||"");(e?$(ATTRS.selectors.mainContainer):$(ATTRS.selectors.menuContainer)).append(s)}function createNewBox(e,t,n,a,s){let o=s?'style="margin-left: -316px; width: 962px;"':"";$(ATTRS.selectors.playerContainer).append(`\n        <div data-v-73ccaaca="" data-v-5190ae12="" class="modal" ${o}>\n            <div data-v-73ccaaca="" class="overlay"></div>\n            <i data-v-73ccaaca="" class="fas fa-times-circle close-button" onclick="$(ATTRS.selectors.modalHud).remove()"></i>\n            <div data-v-73ccaaca="" class="wrapper"><div data-v-73ccaaca="" class="content fade-box">\n                <div data-v-c41b640a="" data-v-5190ae12="" data-v-15c13b66="" class="container">\n                    <div class="customBoxHeader">\n                        <h2 data-v-f0eb8534="" class="player-list-title customBoxTitle" ${a?`tip="${a}"`:""}>${t}</h2>\n                        ${n}\n                    </div>\n                    ${e}\n                </div>\n            </div>\n        </div>\n    `)}function createColorObserver(e,t){const n=document.querySelector(e);function a(e){const t=e.textContent.trim();if(APP.blacklist.includes(t))e.style.color="white";else{const n=LISTS.colors[t];if(!n)return void(e.classList.contains("custom")&&(e.classList.remove("custom"),e.style.color=""));e.classList.add("custom"),e.style.color=n.color?n.color:"white"}}new MutationObserver((e=>{for(const n of e)if("childList"===n.type)n.addedNodes.forEach((e=>{e.nodeType===Node.ELEMENT_NODE&&(e.matches(t)&&a(e),e.querySelectorAll(t).forEach(a))}));else if("characterData"===n.type){const e=n.target.parentElement;e&&e.matches(t)&&a(e)}})).observe(n,{childList:!0,subtree:!0,characterData:!0})}function drawUsersModal(){if($(ATTRS.selectors.userBox).length>0)return;const e=usersModal(LISTS.users);createNewBox(e.meHeader+e.profileHeader+e.onlineHeader+e.onlineList+e.offlineHeader+e.offlineList,e.counts.total+" Players",injectAnonymousSwitch(),injectConnectionsStats())}function usersModal(e){const t=e[USER.credentials.uid];let{listOnline:n,listOffline:a,userCount:s}=updateUserLists(e,t);return{meHeader:'<h3 class="titleSubBox">My profile</h3>',onlineHeader:`<h3 class="titleSubBox">${s.online} Online players</h3>`,offlineHeader:`<h3 class="titleSubBox">${s.offline} Offline players</h3>`,profileHeader:injectUser(t,getUsersTime(t.status)),onlineList:n,offlineList:a,counts:s}}function updateUserLists(e,t){let n="",a="",s={online:0,offline:0,total:0};return Object.values(e).forEach((e=>{if(e===t)return;const o=getUsersTime(e.status),i=injectUser(e,o);"Online"===o?(n+=i,s.online++):o&&(a+=i,s.offline++),s.total++})),{listOnline:n,listOffline:a,userCount:s}}function injectUser(e,t){return getUsersAnonymous(e),""===e.nickname.trim()&&(e.color="white",e.nickname="Unnamed"),`\n        <div class="listItem userItem ${t}" tip="${getUsersTip(e,e.server,t)}">\n            <img class="userPhoto beautifulSkin" alt="" src="${""===e.skin?ATTRS.images.transparentSkin:e.skin}" onerror="this.src = '${ATTRS.images.defaultSkin}'">\n            <div class="userOnline" style="background-color: ${"Online"===t?ATTRS.colors.onlineColor:ATTRS.colors.offlineColor}"></div>\n            <div class="listTextItem userTextElem">\n                <div class="userNickLine">\n                    ${e.badge&&e.badge.url?`<img class="userBadgeDiv" alt="" src="${e.badge.url}" tip="${e.badge.tip}">`:""}\n                    <p class="userNickname" style="color: ${e.color}">${e.nickname}\n                        <span class="userLevel">${0===e.level?"":" - Lvl "+e.level}</span>\n                    </p>\n                </div>\n                <p class="userOnlineText">${t} on ${e.server}\n                    <img class="userModeImg" alt="" src="${getUsersMode(e.mode)}" tip="${e.mode+" mode"}">\n                </p>\n            </div>\n        </div>\n    `}function injectAnonymousSwitch(){return`\n        <div data-v-3ddebeb3="" class="p-switch pretty switchAnonymous" p-checkbox="">\n            <input type="checkbox" id="anonymousSwitch" ${USER.configurations.anonymous}="" onchange="USER.configurations.anonymous = switchManager(USER.configurations.anonymous, 'anonymous')" tip="When this mode is activated, the only information visible to other players is your online status and the server you are on. The rest is hidden."> \n            <div class="state">\n                <label>Anonymous</label>\n            </div>\n        </div>\n    `}function injectConnectionsStats(){let e={total:Object.keys(LISTS.users).length,online:0,daily:0,last2days:0,last7days:0,last15days:0},t=(new Date).getTime(),n=18e5,a=1728e5,s=2592e5,o=6912e5,i=1296e6;for(let r in LISTS.users)if(LISTS.users.hasOwnProperty(r)){let c=LISTS.users[r].status;t-c<=n&&e.online++,t-c<=a&&e.daily++,t-c<=s&&e.last2days++,t-c<=o&&e.last7days++,t-c>i&&e.last15days++}return`Total install: ${e.total-1}\nOnline users: ${e.online-1}\nDaily active users: ${e.daily-1}\nActive last 2 days: ${e.last2days-1}\nActive this week: ${e.last7days-1}`}function getUsersTime(e){const t=(new Date).getTime()-e,n=Math.floor(t/6e4),a=Math.floor(n/1440),s=n-24*a*60,o=Math.floor(s/60);return t<18e5?"Online":function(e,t,n){if(!(e>=2))return e>0?`${e}d ago`:t>0?`${t}h ago`:n>0?`${n} min ago`:"Offline"}(a,o%24,s%60)}function getUsersAnonymous(e){"checked"===e.anonymous&&(e.skin=ATTRS.images.anonymousSkin,e.nickname="Anonymous #"+Math.floor(1e3*Math.random()),e.level=0,e.color=ATTRS.colors.white,e.mode="Anonymous",e.badge=null)}function getUsersTip(e,t,n){return`Nickname : ${e.nickname}\nLevel : ${e.level}\nLast connection : ${"Online"===n?"Now":n}\nServer : ${t}\nColor used : ${e.color}\nMode: ${e.mode?e.mode:"Unknown"}`}function getUsersMode(e){return"Single"===e?ATTRS.images.singleMode:"Dual"===e?ATTRS.images.dualMode:ATTRS.images.undefMode}function drawStatisticsModal(){if($(ATTRS.selectors.toolBox).length>0)return;const e=statisticsModal(USER.statistics);createNewBox(e.list,"Profile & stats",e.logout)}function statisticsModal(e){return{list:generateStatisticsList(e),logout:generateLogoutButton()}}function generateLogoutButton(){return'\n        <div class="divLogout" onclick="firebaseSignOut()">\n            <p>Logout</p>\n            <i class="fas fa-sign-out-alt signOutButton"></i>\n        </div>\n    '}function generateStatisticsList(e){return`\n        <div class="stat-container">\n            ${generateProfileSection()}\n            ${generateStatisticsSection(e)}\n            <p class="resetAllStatistics" onclick="swalResetStatistics()">Reset all statistics <i class="fas fa-sync-alt resetAllStatisticsIcon"></i></p>\n        </div>\n    `}function generateProfileSection(){return`\n        <div data-v-2c5139e0="" class="section row">\n            <div data-v-2c5139e0="" class="header">Profil\n                <span data-v-22117250="" class="right silent silentUid confidential">${USER.credentials.uid}</span>\n            </div>\n            <div data-v-2c5139e0="" class="options">\n                <p class="stat-p">\n                    ${0===$(ATTRS.selectors.discordName).length?"Disconnected":"Connected"}\n                    <span class="stat-span"> to Discord\n                    <i class="fab fa-discord"></i>\n                    </span>\n                </p>\n                <p class="stat-p confidential">\n                    <span class="stat-span" style="text-shadow: none!important">Account email :</span>\n                    ${USER.credentials.email}\n                </p>\n            </div>\n        </div>\n    `}function generateStatisticsSection(e){return`\n        <div data-v-2c5139e0="" class="section row">\n            <div data-v-2c5139e0="" class="header">Statistics   \n                <i class="fas fa-chart-bar headerIcon"></i>\n            </div>\n            <div data-v-2c5139e0="" class="options">\n                ${generateStatisticItem("Kills",e.killTotal)}\n                ${generateStatisticItem("Deaths",e.gameTotal)}\n                ${generateStatisticItem("K/D",e.kda.toFixed(2),"The KDA represents the number of kills in relation to the number of deaths.")}\n                ${generateStatisticItem("Mass eaten",getFormatedMass(e.massTotal))}\n                ${generateStatisticItem("Mass eaten / game",getFormatedMass(e.massAvg))}\n                ${generateStatisticItem("Time played",getElapsedTime(e.timeTotal))}\n                ${generateStatisticItem("Time played / game",getElapsedTime(e.timeAvg))}\n            </div>\n        </div>\n    `}function generateStatisticItem(e,t,n=""){return`\n        <p class="stat-p" ${n?`tip="${n}"`:""}>\n            <span class="stat-span">${e}: </span>\n            ${t}\n        </p>\n    `}function getConvertedTimeToSeconds(e){return"string"!=typeof e?0:e.split(" ").reduce(((e,t)=>{const n=parseFloat(t);return t.endsWith("s")?e+n:t.endsWith("min")?e+60*n:t.endsWith("h")?e+3600*n:e}),0)}function getConvertedStringToNumber(e){if("string"!=typeof e)return 0;const t=parseFloat(e);return Number.isNaN(t)?0:e.endsWith("k")?1e3*t:e.endsWith("M")?1e6*t:t}function getElapsedTime(e,t=!0,n=!0,a=!0,s=!0,o=!0,i=!0){let r=0,c=0,l=0,d=0,u=0;t&&(r=Math.floor(e/31536e3),e%=31536e3),n&&(c=Math.floor(e/2629800),e%=2629800),a&&(l=Math.floor(e/86400),e%=86400),s&&(d=Math.floor(e/3600),e%=3600),o&&(u=Math.floor(e/60),e%=60),i&&(e=Math.round(e));let m="";return t&&r>0&&(m+=`${r}y `),n&&c>0&&(m+=`${c}m `),a&&l>0&&(m+=`${l}d `),s&&d>0&&(m+=`${d}h `),o&&u>0&&(m+=`${u}min `),i&&e>0&&(m+=`${e}s`),m.trim()}function getFormatedMass(e){return e>=1e15?formatNumber(e,1e15,"Qd"):e>=1e12?formatNumber(e,1e12,"Td"):e>=1e9?formatNumber(e,1e9,"Md"):e>=1e6?formatNumber(e,1e6,"M"):e>=1e3?formatNumber(e,1e3,"k"):Math.round(e).toString()}function formatNumber(e,t,n){let a=e/t,s=e%t,o=Math.round(s/(t/10));return o>0?`${Math.round(a)},${o}${n} `:`${Math.round(a)}${n}`}function swalResetStatistics(){Swal.fire({title:"Confirm reset ?",text:"Do you want to permanently delete your statistics ?",showCancelButton:!0,confirmButtonText:"Yes",cancelButton:"No"}).then((e=>{!0===e.value&&confirmResetStatistics()}))}function confirmResetStatistics(){DB.references.meStat.remove().then((()=>{sendTimedSwal("Deleted","Your statistics have been successfully deleted, the page will reload...",1500,!1),setTimeout((()=>window.location.reload()),1500)})).catch((e=>{sendTimedSwal("Error","Deleting your statistics failed: "+e.message,1e4,"OK")}))}function drawLeaderboardModal(){$(ATTRS.selectors.toolBox).length>0||(void 0===LISTS.leaderboard?DB.references.statistics.once("value",(e=>{e.exists()&&(LISTS.leaderboard=e.val(),addLeaderboardModal())})):addLeaderboardModal())}function addLeaderboardModal(){createNewBox(`\n        <div class="buttonTabContainer">${[{id:0,text:"K/D",filter:"kda",class:"leaderbordKdaButton"},{id:1,text:"Kills",filter:"killTotal",class:"leaderbordKillsButton"},{id:2,text:"Deaths",filter:"gameTotal",class:"leaderbordGamesButton"},{id:3,text:"Mass total",filter:"massTotal",class:"leaderbordMassTotalButton"},{id:4,text:"Mass avg",filter:"massAvg",class:"leaderbordMassAvgButton"},{id:5,text:"Time total",filter:"timeTotal",class:"leaderbordTimeButton"}].map((e=>`\n        <div class="${e.class} buttonTab ${0===e.id?"buttonTabDisabled":"buttonTabActive"}" onclick="handleButtonClick(${e.id}, '${e.filter}')">\n            <p class="buttonTabText">${e.text}</p>\n        </div>\n    `)).join("")}</div>\n        <div class="leaderboardList"></div>\n    `,"Deltaboard top 50",""),injectCustomLeaderboard("kda")}function handleButtonClick(e,t){showPage(e,[ATTRS.selectors.leaderbordKdaButton,ATTRS.selectors.leaderbordKillsButton,ATTRS.selectors.leaderbordGamesButton,ATTRS.selectors.leaderbordMassTotalButton,ATTRS.selectors.leaderbordMassAvgButton,ATTRS.selectors.leaderbordTimeButton],null),injectCustomLeaderboard(t)}function injectCustomLeaderboard(e){const t={kda:(e,t)=>t.kda-e.kda,killTotal:(e,t)=>t.killTotal-e.killTotal,gameTotal:(e,t)=>t.gameTotal-e.gameTotal,massTotal:(e,t)=>t.massTotal-e.massTotal,timeTotal:(e,t)=>t.timeTotal-e.timeTotal,massAvg:(e,t)=>t.massAvg-e.massAvg},n=Object.values(LISTS.leaderboard).sort(t[e]||t.kda).slice(0,50).map(((t,n)=>injectLeaderboard(t,t.uid,n+1,e))).join("");$(ATTRS.selectors.leaderboardList).html(n)}function injectLeaderboard(e,t,n,a){const s=LISTS.users[e.uid];if(!s)return"";let o;switch(a){case"killTotal":o=e.killTotal;break;case"gameTotal":o=e.gameTotal;break;case"kda":default:o=e.kda.toFixed(2)+" K/D";break;case"massTotal":o=getFormatedMass(e.massTotal);break;case"massAvg":o=getFormatedMass(e.massAvg);break;case"timeTotal":o=getElapsedTime(e.timeTotal,!1,!1,!1,!0,!0,!1)}return""===s.nickname.trim()&&(s.color="white",s.nickname="Unnamed"),`\n        <div class="leaderboardItem ${s.uid===USER.credentials.uid?"leaderboardItemMe":""}">\n            <p class="leaderboardPosition">${n}. </p>\n            ${s.badge&&s.badge.url?`<img class="leaderboardBadgeDiv" alt="" src="${s.badge.url}" tip="${s.badge.tip}">`:""}\n            <p class="leaderboardNickname ${s.uid===USER.credentials.uid?"leaderboardNicknameMe":""}" style="color: ${s.color}">${s.nickname}</p>\n            <p class="leaderboardStatisticValue ${s.uid===USER.credentials.uid?"leaderboardStatisticValueMe":""}">${o}</p>\n        </div>\n    `}function drawToolsModal(){$(ATTRS.selectors.toolBox).length>0||(void 0===LISTS.badges||void 0===LISTS.configurations?DB.references.badges.once("value",(e=>{e.exists()&&(LISTS.badges=e.val(),DB.references.meConfig.once("value",(e=>{e.exists()&&(LISTS.configurations=e.val(),addToolsModal())})))})):addToolsModal())}function addToolsModal(){createNewBox(toolsModal(fetchItem(LISTS.configurations,injectConfiguration),Object.keys(LISTS.configurations).length||0,fetchItem(LISTS.badges,injectBadge)),"Delta settings","")}function toolsModal(e,t,n){const a=`\n        <div data-v-3ddebeb3="" class="p-switch pretty" p-checkbox="" tip="Don't activate this option if you do not have a powerful enough computer">\n            <input type="checkbox" id="colorSwitchNickChatbox" ${USER.configurations.colorNicknameChatbox}="" onchange="USER.configurations.colorNicknameChatbox = switchManager(USER.configurations.colorNicknameChatbox, 'colorNicknameChatbox')"> \n            <div class="state">\n                <label>Show colors in the chat</label>\n            </div>\n        </div>\n        <div data-v-3ddebeb3="" class="p-switch pretty" p-checkbox="" tip="Don't activate this option if you do not have a powerful enough computer">\n            <input type="checkbox" id="colorSwitchNickLeaderboard" ${USER.configurations.colorNicknameLeaderboard}="" onchange="USER.configurations.colorNicknameLeaderboard = switchManager(USER.configurations.colorNicknameLeaderboard, 'colorNicknameLeaderboard')"> \n            <div class="state">\n                <label>Show colors in the leaderboard</label>\n            </div>\n        </div>\n        <div data-v-3ddebeb3="" class="p-switch pretty" p-checkbox="">\n            <input type="checkbox" id="colorSwitchNickCell" ${USER.configurations.colorNicknameCell}="" onchange="USER.configurations.colorNicknameCell = switchManager(USER.configurations.colorNicknameCell, 'colorNicknameCell')"> \n            <div class="state">\n                <label>Show colors in the cells</label>\n            </div>\n        </div>\n        <div data-v-22117250="" class="silent silentCustomTop silentCustomBottom">After change color settings, refresh the page.</div>\n    `;return`\n        <div class="tool-container">\n            <div class="tool-section">\n                <div class="buttonTabContainer">\n                    <div class="buttonTab buttonTabDisabled toolsNavPerksTab" onclick="showPage(0, [ATTRS.selectors.toolsPageButtonPerks, ATTRS.selectors.toolsPageButtonSettings, ATTRS.selectors.toolsPageButtonConfigurations], [ATTRS.selectors.toolsPagePerks, ATTRS.selectors.toolsPageSettings, ATTRS.selectors.toolsPageConfigurations])">\n                        <p class="buttonTabText">Perks</p>\n                    </div>\n                    <div class="buttonTab buttonTabActive toolsNavSettingsTab" onclick="showPage(1, [ATTRS.selectors.toolsPageButtonPerks, ATTRS.selectors.toolsPageButtonSettings, ATTRS.selectors.toolsPageButtonConfigurations], [ATTRS.selectors.toolsPagePerks, ATTRS.selectors.toolsPageSettings, ATTRS.selectors.toolsPageConfigurations])">\n                        <p class="buttonTabText">Settings</p>\n                    </div>\n                    <div class="buttonTab buttonTabActive toolsNavConfigurationsTab" onclick="showPage(2, [ATTRS.selectors.toolsPageButtonPerks, ATTRS.selectors.toolsPageButtonSettings, ATTRS.selectors.toolsPageButtonConfigurations], [ATTRS.selectors.toolsPagePerks, ATTRS.selectors.toolsPageSettings, ATTRS.selectors.toolsPageConfigurations])">\n                        <p class="buttonTabText">Backups</p>\n                    </div>\n                </div>\n                <div class="toolsPagePerks">\n                    <div data-v-2c5139e0="" class="section row">\n                        <div data-v-2c5139e0="" class="header">Colored name<i class="fas fa-paint-brush headerIcon"></i></div>\n                        <div data-v-2c5139e0="" class="options">\n                            <div class="colorPickerContainer">\n                                <input type="text" id="colorPickerInput" value="${USER.configurations.nicknameColor}" placeholder="${ATTRS.colors.defaultColor}" onchange="onColorChanged(this)">\n                                <div class="colorPickerGui">\n                                    <input type="color" id="colorPickerSelector" value="${USER.configurations.nicknameColor}" onchange="onColorChanged(this)">\n                                </div>\n                            </div>\n                        <div data-v-22117250="" class="silent silentCustomTop">After change, re-join the server</div>\n                        </div> \n                    </div>\n                    <div data-v-2c5139e0="" class="section row">\n                        <div data-v-2c5139e0="" class="header">Badges<i class="fas fa-certificate headerIcon"></i></div>\n                        <div data-v-2c5139e0="" class="options">\n                            <div class="badgeListPerks">\n                                ${n}\n                            </div>\n                        </div> \n                    </div>\n                    <div data-v-2c5139e0="" class="section row">\n                        <div data-v-2c5139e0="" class="header">Hats<i class="fas fa-hat-cowboy-side headerIcon"></i></div>\n                        <div data-v-2c5139e0="" class="options">\n                            <div class="hatListPerks">\n                                Soon\n                            </div>\n                        </div> \n                    </div>\n                </div>\n                <div class="toolsPageSettings hidden">\n                    <div data-v-2c5139e0="" class="section row">\n                        <div data-v-2c5139e0="" class="header">Configuration<i class="fas fa-cog headerIcon"></i>\n                        </div>\n                        <div data-v-2c5139e0="" class="options">\n                            ${1===APP.mode?a:""}\n                            <div data-v-3ddebeb3="" class="p-switch pretty" p-checkbox="">\n                                <input type="checkbox" id="blurredHUD" ${USER.configurations.blurredHUD}="" onchange="USER.configurations.blurredHUD = switchManager(USER.configurations.blurredHUD, 'blurredHUD')" tip=""> \n                                <div class="state">\n                                    <label>Blurred in-game HUD</label>\n                                </div>\n                            </div>\n                            <div data-v-3ddebeb3="" class="p-switch pretty" p-checkbox="">\n                                <input type="checkbox" id="resizableChatbox" ${USER.configurations.resizableChatbox}="" onchange="USER.configurations.resizableChatbox = switchManager(USER.configurations.resizableChatbox, 'resizableChatbox')" tip=""> \n                                <div class="state">\n                                    <label>Resizable chatbox</label>\n                                </div>\n                            </div>\n                            <div data-v-3ddebeb3="" class="p-switch pretty" p-checkbox="">\n                                <input type="checkbox" id="autoSynchronization" ${USER.configurations.autoSynchronization}="" onchange="USER.configurations.autoSynchronization = switchManager(USER.configurations.autoSynchronization, 'autoSynchronization')" tip="By saving your locales configurations to the database, you will be able to access them anywhere"> \n                                <div class="state">\n                                    <label>Auto save my configurations</label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="toolsPageConfigurations hidden">\n                    <div data-v-2c5139e0="" class="section row">\n                        <div data-v-2c5139e0="" class="header">${t} backups saved<i class="fas fa-save headerIcon"></i>\n                        </div>\n                        <div data-v-2c5139e0="" class="options">\n                            ${e}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `}async function drawSkinsModal(){$(ATTRS.selectors.skinBox).length>0||(createNewBox(injectSkinPages(),"Public skins","","",!0),await loadAllSkins())}function injectSkinPages(){return'\n        <div class="buttonTabContainer">\n            <div class="buttonTab buttonTabDisabled skinsNavAllButton" onclick="showPage(0, [ATTRS.selectors.skinsNavAllButton, ATTRS.selectors.skinsNavMeButton, ATTRS.selectors.skinsNavFavButton], [ATTRS.selectors.skinsNavAllPage, ATTRS.selectors.skinsNavMePage, ATTRS.selectors.skinsNavFavPage], loadAllSkins)">\n                <p class="buttonTabText">Public skins</p>\n            </div>\n            <div class="buttonTab buttonTabActive skinsNavMeButton" onclick="showPage(1, [ATTRS.selectors.skinsNavAllButton, ATTRS.selectors.skinsNavMeButton, ATTRS.selectors.skinsNavFavButton], [ATTRS.selectors.skinsNavAllPage, ATTRS.selectors.skinsNavMePage, ATTRS.selectors.skinsNavFavPage], loadMySkins)">\n                <p class="buttonTabText">Your skins</p>\n            </div>\n            <div class="buttonTab buttonTabActive skinsNavFavButton" onclick="showPage(2, [ATTRS.selectors.skinsNavAllButton, ATTRS.selectors.skinsNavMeButton, ATTRS.selectors.skinsNavFavButton], [ATTRS.selectors.skinsNavAllPage, ATTRS.selectors.skinsNavMePage, ATTRS.selectors.skinsNavFavPage], loadFavSkins)">\n                <p class="buttonTabText">Favorite skins</p>\n            </div>\n        </div>\n        <div class="skinsNavAllPage skinsLibraryList"></div>\n        <div class="skinsNavMePage skinsLibraryList"></div>\n        <div class="skinsNavFavPage skinsLibraryList"></div>\n    '}function renderSkinsFromList(e,t){Array.isArray(e)&&0!==e.length&&$(t).find("img").length!==e.length&&e.forEach((e=>{itemSkinModal(e,t)}))}function itemSkinModal(e,t){if(!e.id)return;const n=`https://skins.vanis.io/s/${e.id}`;$(t).append(`\n        <img class="skinItemLibrary beautifulSkin" src="${n}" alt="${e.id}" tip="${n}" onclick="openSkin('${n}', '${e.id}')">\n    `)}async function fetchSkins(e,t){try{const t=await fetch(e,{method:"GET",headers:{Authorization:APP.skinAuth,Origin:"https://skins.vanis.io/"}});return t.ok?await t.json():(sendTimedSwal("Error",`Server responded with ${t.status}: ${t.statusText}`,1e4,"OK"),null)}catch(e){return sendTimedSwal(t,e.toString(),3e3,!1),null}}async function loadSkins(e,t,n,a,s){if($(ATTRS.selectors.boxTitle).text(e),t.length>0)return void renderSkinsFromList(e,t,s);const o=await fetchSkins(n,a);o&&(t.push(...o),o.forEach((e=>itemSkinModal(e,s))))}async function loadMySkins(){await loadSkins("My skins",SKINS.me,"https://cors-proxy.fringe.zone/https://skins.vanis.io/api/me/skins","Fetching my skins error",ATTRS.selectors.skinsNavMePage)}async function loadFavSkins(){await loadSkins("Favorite skins",SKINS.fav,"https://cors-proxy.fringe.zone/https://skins.vanis.io/api/me/favorites","Fetching my favorites skins error",ATTRS.selectors.skinsNavFavPage)}async function loadAllSkins(){if($(ATTRS.selectors.boxTitle).text("Public skins"),SKINS.all.length>0)renderSkinsFromList(SKINS.all,ATTRS.selectors.skinsNavAllPage);else for(let e=0;e<=50;e++){const t=await fetchSkins(`https://cors-proxy.fringe.zone/https://skins.vanis.io/api/public-skins?page=${e}`,`Page ${e} error`);t&&(SKINS.all.push(...t),t.forEach((e=>itemSkinModal(e,ATTRS.selectors.skinsNavAllPage))))}}function openSkin(e,t){$(ATTRS.selectors.overlay).append(`\n        <div class="overlaySkin">\n            <i class="fas fa-times closeSkinItemModal" onclick="$(ATTRS.selectors.overlaySkin).remove()"></i>\n            <div class="absoluteCenter">\n                <img class="skinItemModal beautifulSkin" src="${e}" alt="${t}">\n                <div class="skinItemActions">\n                    <div class="skinItemNav skinItemNavId">\n                        <p class="skinItemURL">Skin ID: ${t}</p>\n                    </div>\n                    <div class="skinItemNav skinItemNavBtn" onclick="yoinkSkin('${e}')">\n                        <div class="skinItemYoink">\n                            <i class="fas fa-link"></i>\n                            <p class="skinItemTextButton">Yoink</p>\n                        </div>\n                    </div>\n                    <div class="skinItemNav skinItemNavBtn" onclick="copySkin('${e}')">\n                        <div class="skinItemCopy">\n                            <i class="fas fa-copy"></i>\n                            <p class="skinItemTextButton">Copy</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `)}function copySkin(e){navigator.clipboard.writeText(e).then((()=>{sendTimedSwal("Skin copied","The skin has been copied to the clipboard",1500,!1)})).catch((e=>{sendTimedSwal("Error","An error occurred while copying the skin: "+e.message,1e4,"OK")}))}function yoinkSkin(e){let t=JSONSafeParser(getLocalStorageItem("skins",'["https://skins.vanis.io/s/Qkfih2","https://skins.vanis.io/s/Qkfih2"]'));Object.keys(t).length>0?(t.push(e),localStorage.setItem("skins",JSON.stringify(t)),sendTimedSwal("Skin yoinked","The skin has been yoinked, need to refresh the page to save",1500,!1)):sendTimedSwal("Error","An error occurred while yoinking the skin",1e4,"OK")}function injectConfiguration(e,t){const n=injectSkin(e.skins);return`\n        <div class="listItem configItem" id="${t}">\n            <div class="configContent">\n                <div class="configInformations">\n                    <p class="configName">${e.machineId}</p>\n                    <p class="configDate">${e.date}</p>\n                </div>\n                <div class="configContentList">\n                    ${APP.machineId===e.machineId?'<p class="configActual configCard">Actual backup</p>':""}\n                    ${e.nickname&&""!==e.nickname?`<p class="configNickname configCard" style="color: ${e.nicknameColor?e.nicknameColor:"#ffffff"}">Name: ${e.nickname}</p>`:""}\n                    ${e.teamtag?`<p class="configTeamTag configCard">Tag: ${e.teamtag}</p>`:""}\n                    <p class="configHotkeys configCard">${function(e){if(!e)return 0;const t=JSONSafeParser(e);return 0===Object.keys(t).length?0:Object.keys(t).filter((e=>""!==t[e])).length}(e.hotkeys)} hotkeys</p>\n                    <p class="configSkins configCard">${n.count} skins</p>\n                </div>\n                ${n.list}\n            </div>\n            <div class="configAction">\n                <div class="configGet configActionButton" onclick="updateConfiguration('${t}')">\n                    <p class="configActionButtonText">Apply</p>\n                </div>\n                <div class="configDelete configActionButton" onclick="deleteConfiguration('${t}')">\n                    <p class="configActionButtonText">Delete</p>\n                </div>\n            </div>\n        </div>\n    `}function injectSkin(e){if(!e)return{list:"",count:0};const t=JSONSafeParser(e);if(Object.keys(t).length>0){return{list:`<div class="listSkins">${t.map((e=>`<img src="${e}" alt="" class="configSkinItem beautifulSkin" tip="${e}" onerror="this.src = '${ATTRS.images.defaultSkin}'">`)).join("")}</div>`,count:Object.keys(t).length}}return{list:"",count:0}}function injectBadge(e){const t=LISTS.users[USER.credentials.uid].badge;let n=!1;return APP.selected=!(!t||t.id!==e.id||!t.url)&&t.id,(e.owners&&e.owners[USER.credentials.uid]||e.earn&&("kill"===e.earn.type&&e.earn.value<=USER.statistics.killTotal||"time"===e.earn.type&&e.earn.value<=USER.statistics.timeTotal))&&(n=!0),`\n        <img class="badgeItem badge${e.id}" src="${e.url}" tip="${e.tip}" ${n?`onclick="pushUserBadge('${encodeURIComponent(JSON.stringify(e))}')"`:""} style="opacity: ${APP.selected?1:.3}; cursor: ${n?"pointer":"not-allowed"};" alt=""/>\n    `}function deleteSuccess(e){const t=$("#"+e);DB.references.meConfig.child(e).remove().then((()=>{t.length&&(t.remove(),sendTimedSwal("Deleted","The configuration have been successfully deleted",1500,!1))})).catch((e=>{sendTimedSwal("Error","Deleting your configuration failed: "+e.message,1e4,"OK")}))}function deleteConfiguration(e){Swal.fire({title:"Confirm deletion ?",text:"Do you want to remove this configuration definitely ?",showCancelButton:!0,confirmButtonText:"Yes",cancelButton:"No"}).then((t=>{!0===t.value&&deleteSuccess(e)}))}function updateSuccess(e){const t=LISTS.configurations[e];["skins","hotkeys","blurredHUD","resizableChatbox","colorNicknameCell","colorNicknameChatbox","colorNicknameLeaderboard","nicknameColor","nickname","teamtag"].forEach((e=>{t[e]&&""!==t[e]&&"{}"!==t[e]&&localStorage.setItem(e,t[e])})),localStorage.removeItem("MachineId"),localStorage.setItem("MachineId",getMachineId()),sendTimedSwal("Success","The configuration has been changed, the page will reload...",1500,!1),setTimeout((()=>window.location.reload()),1500)}function callSwal(e){Swal.fire({title:"Confirm update ?",text:"Do you want to load this configuration into the game ?",showCancelButton:!0,confirmButtonText:"Yes",cancelButton:"No"}).then((t=>{!0===t.value&&updateSuccess(e)}))}function updateConfiguration(e){callSwal(e)}function updateSkinsLocally(){let e="[";$(ATTRS.selectors.skinElem).each((function(){const t=$(this).attr("src");t&&"/img/skin-add.png"!==t&&("["!==e&&(e+=","),e+='"'+t+'"')})),e+="]",localStorage.setItem("skins",e)}function createSortable(){const e=document.getElementById("skins");new Sortable(e,{handle:".skin-container",onEnd:function(){updateSkinsLocally()}})}function createChatboxResizable(){const e=$(ATTRS.selectors.chatboxContainer);e.on("mousedown",(function(t){const n=t.clientX,a=t.clientY,s=parseInt(e.css("width"),10),o=parseInt(e.css("height"),10);function i(t){const i=s+t.clientX-n,r=o+a-t.clientY;e.css("width",`${i}px`),e.css("height",`${r}px`)}$(document).on("mousemove",i),$(document).on("mouseup",(function e(){$(document).off("mousemove",i),$(document).off("mouseup",e)}))}))}function changeUserColor(e){USER.configurations.nicknameColor=e,localStorage.setItem("nicknameColor",e),$(ATTRS.selectors.nicknameProfile).css("color",APP.reserved.value?APP.reserved.color:e),$(ATTRS.selectors.colorPickerInput).val(e),$(ATTRS.selectors.colorPickerSelector).val(e),pushUserColors(),pushUserOnline()}function changeCellColor(e){const t=CanvasRenderingContext2D.prototype.fillText;CanvasRenderingContext2D.prototype.fillText=function(n,a,s){APP.blacklist.includes(n)||(n===USER.configurations.nickname?this.fillStyle=USER.configurations.nicknameColor:n===e&&LISTS.colors[e]&&LISTS.colors[e].color?this.fillStyle=LISTS.colors[e].color:LISTS.colors[n]&&LISTS.colors[n].color&&(this.fillStyle=LISTS.colors[n].color)),t.apply(this,arguments)}}function pushUserData(){pushUserInfos(),pushUserColors(),pushUserConfigurations()}function fetchUserData(){fetchUsersOnce(),fetchUserStatisticsDb(),fetchColorsOnce((()=>{getReservedName(),pushUserData()}))}function JSONSafeParser(e){try{return JSON.parse(e)}catch(e){return sendTimedSwal("Error","JSON parsing error: "+e.message,1e4,"OK"),{}}}function getLocalStorageItem(e,t){return localStorage.getItem(e)||t}function getLocalValues(e){USER.credentials=e,USER.server="Lobby",USER.mode=1===APP.mode?"Single":"Dual",switchManagerSpecificChange(USER.configurations.blurredHUD,"blurredHUD")}function getDatabase(){DB.database=firebase.database(),DB.references=getAllReferences()}function pushDatabase(e,t){window.firebase&&e.update(t)}function removeDatabase(e){window.firebase&&e.remove(data)}function switchManager(e,t){return switchManagerSpecificChange(e="checked"===e?"unchecked":"checked",t),localStorage.setItem(t,e),e}function switchManagerSpecificChange(e,t){if("anonymous"===t)pushDatabase(DB.references.meUser,{anonymous:e});else if("blurredHUD"===t){let t="checked"===e?"blur(7px)":"";$(ATTRS.selectors.leaderboard).css("backdrop-filter",t),$(ATTRS.selectors.chatboxContainer).css("backdrop-filter",t),$(ATTRS.selectors.minimapContainer).css("backdrop-filter",t),$(ATTRS.selectors.messageToast).css("backdrop-filter",t),2===APP.mode&&$(ATTRS.selectors.playerStalkContainer).css("backdrop-filter",t)}}function sendTimedSwal(e,t,n,a){Swal.fire({title:e,text:t,timer:n,showConfirmButton:a})}function displayError(e){const t=$(ATTRS.selectors.bodyHud);t.empty(),t.css("background-color","black");const n=$("<error>").text(e).css({"font-size":"28px",color:"white","text-align":"left",margin:"50px",position:"absolute"});throw t.append(n),new Error(e)}function getMachineId(){let e=localStorage.getItem("MachineId");return e||(e=crypto.randomUUID(),localStorage.setItem("MachineId",e)),e}function getAllConfigurations(){return{machineId:APP.machineId,date:(new Date).toLocaleDateString("fr-FR"),skins:getLocalStorageItem("skins","{}"),hotkeys:getLocalStorageItem("hotkeys","{}"),nicknameColor:getLocalStorageItem("nicknameColor",ATTRS.colors.defaultColor),nickname:getLocalStorageItem("nickname",""),anonymous:getLocalStorageItem("anonymous","unchecked"),colorNicknameLeaderboard:getLocalStorageItem("colorNicknameLeaderboard","unchecked"),colorNicknameChatbox:getLocalStorageItem("colorNicknameChatbox","unchecked"),colorNicknameCell:getLocalStorageItem("colorNicknameCell","checked"),autoSynchronization:getLocalStorageItem("autoSynchronization","checked"),blurredHUD:getLocalStorageItem("blurredHUD","checked"),resizableChatbox:getLocalStorageItem("resizableChatbox","unchecked")}}function getAllReferences(){const e=USER.credentials.uid,t=DB.database;return{color:t.ref("Colors"),user:t.ref("Users"),statistics:t.ref("Statistics"),badges:t.ref("Badges"),meUser:t.ref(`Users/${e}`),meUserBadge:t.ref(`Users/${e}/badge`),meColorBadge:t.ref(`Colors/${e}/badge`),meColor:t.ref(`Colors/${e}`),meStat:t.ref(`Statistics/${e}`),meConfig:t.ref(`Configurations/${e}`),meConfigItem:t.ref(`Configurations/${e}/${APP.machineId}`)}}function getAllLibrary(){return{firebaseApp:"https://www.gstatic.com/firebasejs/8.6.1/firebase-app.js",firebaseDatabase:"https://www.gstatic.com/firebasejs/8.6.1/firebase-database.js",firebaseAuth:"https://www.gstatic.com/firebasejs/8.6.1/firebase-auth.js",jquery:"https://code.jquery.com/jquery-3.7.1.min.js",css:"https://raw.githubusercontent.com/Fohz67/Delta-Client-Content/main/styles.css",deltaDual:"https://vanis.io/delta-dual",sortable:"https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"}}function getAllSelectors(){return{head:"head",link:"link[rel*='icon']",overlay:"#overlay",level:".xp-data>div:first-child",teamTag:"#teamtag",xp:".xp-data>div:last-child",chatboxContainer:1===APP.mode?".chatbox":"#chatbox",messageList:1===APP.mode?".message-list":"#message-list",messageName:1===APP.mode?".message-from-name":".message-from",messageToast:".message-row.toast",colorBox:".perks",colorPickerGui:".colorPickerGui",colorPickerInput:"#colorPickerInput",colorPickerSelector:"#colorPickerSelector",colorSwitchCell:"#colorSwitchNickCell",colorSwitchChatbox:"#colorSwitchNickChatbox",colorSwitchLeaderboard:"#colorSwitchNickLeaderboard",colorSwitchNickCell:"#colorSwitchNickCell",discordBtn:".discord",discordName:1===APP.mode?".account-name":"#account-name",discordPhoto:".avatar",ad:'div[data-v-5190ae12][style*="height: 286px;"]',bar:".bar>.statBar",barHud:".bar",bodyHud:"body",cmp:"#cmpbox",cmpButton:".cmpboxbtn",mainContainer:"#main-container",menuContainer:"#menu-container",modalHud:".modal",socialContainer:".social-container",leaderboard:"#leaderboard",leaderboardText:1===APP.mode?".leaderboard-text":".leaderboard-label[data-v-8a0c31c6]>:last-child ",nickname:"#nickname",nicknameProfile:".nicknameProfile",playButton:"#play-button",playerContainer:"#player-container",playerData:"#player-container #player-data",playerListTitle:".player-list-title",playerStalkContainer:".playerStalkContainer",spectateButton:"#spec-button",serverList:".server-list",serverListItem:".server-list-item",serverName:".server-name",skinContainer:".skin-container",skinElem:".skin",skinProfile:".skinProfile",skinUrl:"#skinurl",skinsId:"#skins",overlaySkin:".overlaySkin",skinAdd:".add-skin",skinsNavAllButton:".skinsNavAllButton",skinsNavMeButton:".skinsNavMeButton",skinsNavFavButton:".skinsNavFavButton",skinsNavAllPage:".skinsNavAllPage",skinsNavMePage:".skinsNavMePage",skinsNavFavPage:".skinsNavFavPage",statKills:"#overlay>.container>.fade-box.scroll>div>div:nth-child(3)",statScore:"#overlay>.container>.fade-box.scroll>div>div:nth-child(2)",statTime:"#overlay>.container>.fade-box.scroll>div>div:nth-child(1)",anonymousStatus:".anonymousStatus",anonymousSwitch:".anonymousSwitch",minimapContainer:1===APP.mode?".minimap-wrapper>.container":".container[data-v-4c95bd45]",statBox:".statBox",toolBox:".toolBox",userBox:".userBox",skinBox:".skinBox",leaderboardBox:".leaderboardBox",userNickLine:".userNickLine",boxTitle:".customBoxTitle",emailInput:"#email-input",loadingDelta:".loadingDelta",passwordInput:"#password-input",submitButton:"#submit-account",submitText:"#submit-text",toolsPagePerks:".toolsPagePerks",toolsPageButtonPerks:".toolsNavPerksTab",toolsPageSettings:".toolsPageSettings",toolsPageButtonSettings:".toolsNavSettingsTab",toolsPageConfigurations:".toolsPageConfigurations",toolsPageButtonConfigurations:".toolsNavConfigurationsTab",leaderboardList:".leaderboardList",leaderbordKdaButton:".leaderbordKdaButton",leaderbordKillsButton:".leaderbordKillsButton",leaderbordGamesButton:".leaderbordGamesButton",leaderbordMassTotalButton:".leaderbordMassTotalButton",leaderbordMassAvgButton:".leaderbordMassAvgButton",leaderbordTimeButton:".leaderbordTimeButton"}}function getAllImages(){return{anonymousSkin:"https://i.ibb.co/NtMpMBJ/anonymous.png",defaultSkin:"https://skins.vanis.io/s/Qkfih2",transparentSkin:"https://i.ibb.co/g9Sj8gK/transparent-skin.png",vanisSkin:"https://skins.vanis.io/s/vanis1",dualMode:"https://i.ibb.co/gSkk94N/dual.png",singleMode:"https://i.ibb.co/Lr248FQ/single.png",undefMode:"https://i.ibb.co/g9Sj8gK/undef.png",deltaLogo:"https://i.ibb.co/kh36nB5/delta.png",imageAddVanis:"/img/skin-add.png"}}function getAllColors(){return{whiteRGB:"rgb(255, 255, 255)",defaultColor:"#c084ff",onlineColor:"#32e34a",offlineColor:"#e33247"}}function getAllErrors(){return{title:"Delta error:",content:". Please send a message in #support on the official Delta Discord server : https://discord.gg/wthDcUb6nY/"}}function getAllTitle(){return["+430 users on Delta","Alis.io","Vanis.io","Vanish.io","Raf x Duru x Fohz","Delta.io","Delta above all","Delta on top","Delta will carry you","Delta best ext ?","Alis.io legends","Want a badge? DM Fohz","Luka will recruit Fohz?","Join discord now","Fohz the tricker","BBN the SK","Exe the legend","Duru is cuter than all","Deadly World the solo","Yuu the hat coder","Splat the YouTuber","Zimek the precursor","Angel the mad","Grouk the legend","Useful the splitrunner","Frenchies on top","Eva, don't hate Fohz","DM Luka to recruit Fohz!","Luka need Fohz ?","Pi the legend","Who's Miracle..?"]}async function drawStyle(){try{const e=`${ATTRS.libraries.css}?=${(new Date).getTime()}`,t=await fetch(e);t.ok||displayError(ATTRS.errors.title+"Css fetcher failed"+ATTRS.errors.content);const n=await t.text();$("<style>").text(n).appendTo("head"),$(ATTRS.selectors.loadingDelta).remove(),localStorage.setItem("promiseError","0"),checkAnnouncement()}catch(e){displayError(ATTRS.errors.title+"Css injector system failed"+ATTRS.errors.content)}}function checkAnnouncement(){parseInt(localStorage.getItem("announcement")||0)<44&&setTimeout((()=>{sendTimedSwal("New feature in Dual mode !!","You can see all the players on the server you are playing on, a button will appear after joining a server, click on it and enjoy !!!",1e4,"OK"),localStorage.setItem("announcement","44")}),1500)}"submitLoading"===document.readyState?document.addEventListener("DOMContentLoaded",onDocumentReady):onDocumentReady();